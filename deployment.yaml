apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-home
 # namespace: myapp
  labels:
    app: home
spec:
  replicas: 1
  selector:
    matchLabels:
      app: home
  template:
    metadata:
      labels:
        app: home
    spec:
      containers:
      - name: container-home
        image: srikanta1219/home:45
        ports:
        - containerPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-jenkins
 # namespace: myapp
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: container-jenkins
        image: srikanta1219/jenkins:45
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-docker
 # namespace: myapp
  labels:
    app: docker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker
  template:
    metadata:
      labels:
        app: docker
    spec:
      containers:
      - name: container-docker
        image: srikanta1219/docker:45
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-kubern8s
 # namespace: myapp
  labels:
    app: kubern8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubern8s
  template:
    metadata:
      labels:
        app: kubern8s
    spec:
      containers:
      - name: container-kubern8s
        image: srikanta1219/kubern8s:45
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: home-svc
 # namespace: myapp
  labels:
    app: home
spec:
  #type: LoadBalancer
  #type: NodePort
  ports:
  - port: 80
   #nodePort: 30001
  selector:
    app: home
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
 # namespace: myapp
  labels:
    app: jenkins
spec:
  type: LoadBalancer
  #type: NodePort
  ports:
  - port: 80
   #nodePort: 30002
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: docker-svc
 # namespace: myapp
  labels:
    app: docker
spec:
  #type: LoadBalancer
  #type: NodePort
  ports:
  - port: 80
   #nodePort: 30002
  selector:
    app: docker
---
apiVersion: v1
kind: Service
metadata:
  name: kubern8s-svc
 # namespace: myapp
  labels:
    app: kubern8s
spec:
  #type: LoadBalancer
  #type: NodePort
  ports:
  - port: 80
   #nodePort: 30002
  selector:
    app: kubern8s
    
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: shanvi-devops
spec:
  rules:
  - host: shanvi.devops.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: home-svc
            port:
              number: 30001
      - path: /jenkins
        pathType: Prefix
        backend:
          service:
            name: jenkins-svc
            port:
              number: 30002
      - path: /docker
        pathType: Prefix
        backend:
          service:
            name: docker-svc
            port:
              number: 30003
      - path: /kubern8s
        pathType: Prefix
        backend:
          service:
            name: kubern8s-svc
            port:
              number: 30004

